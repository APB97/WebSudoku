<span class="hide-in-print">Your time: </span>
<span class="hide-in-print">@SpanToShow</span>

@code {
    [Parameter]
    public EventCallback<TimeSpan> OnTimePassed { get; set; }

    public TimeSpan SpanToShow { get; private set; }

    protected PeriodicTimer? timer;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        using (timer = new PeriodicTimer(TimeSpan.FromSeconds(1)))
        {
            await TimerLoop();
        }
    }

    protected async Task TimerLoop(CancellationToken cancellationToken = default)
    {
        while (timer != null)
        {
            await timer.WaitForNextTickAsync(cancellationToken);
            SpanToShow += TimeSpan.FromSeconds(1);
            StateHasChanged();
            await OnTimePassed.InvokeAsync(SpanToShow);
        }
    }

    public void SetTime(TimeSpan time)
    {
        SpanToShow = time;
        StateHasChanged();
    }
}
